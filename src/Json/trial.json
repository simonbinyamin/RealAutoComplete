{

    "Auto": {
        "Lst" : [
            { "Id": "ApiController",  "Name": "[ApiController]" },
            { "Id": "RouteController", "Name": "Route(\"api/[controller]\")" },
            { "Id": "RouteParam", "Name": "Route(\"GetCompany/{id}\")" },
            { "Id": "Route", "Name": "Route(\"Create\")" },
            { "Id": "Validate", "Name": "[ValidateAntiForgeryToken]" },
            { "Id": "Post", "Name": "[HttpPost]" },
            { "Id": "Fromform", "Name": "[FromForm]Company command" },
            { "Id": "Auth", "Name": "[Authorize]" },
            { "Id": "HttpPut", "Name": "HttpPut(\"{id}\")" },
            { "Id": "HttpDelete", "Name": "HttpDelete(\"{id}\")" },
            { "Id": "Primary", "Name": "[Key]\n[DatabaseGenerated(DatabaseGeneratedOption.Identity)]\npublic int Id { get; set; }" },
            { "Id": "FromBody", "Name": "[FromBody] UserModel user" },
            { "Id": "LinqAny", "Name": "var Exist = (from ur in _context.Users where ur.EmailAddress==user.EmailAddress select ur).Any();" },
            { "Id": "LinqFirstOr", "Name": "UserModel user = (from u in _context.Users where u.UserName == login.UserName select u).FirstOrDefault();" },
            { "Id": "varchar", "Name": "[Column(TypeName = \"VARCHAR\")]\n[StringLength(15)]\npublic string name { get; set; }" },
            { "Id": "date", "Name": "[Column(TypeName = \"DATE\")]\npublic DateTime date { get; set; }" },
            { "Id": "bit", "Name": "[Column(TypeName = \"BIT\")]\npublic bool iswork { get; set; }" },
            { "Id": "numeric", "Name": "[Column(TypeName = \"NUMERIC(18,2)\")]\npublic decimal num { get; set; }" },
            { "Id": "decimal", "Name": "[Column(TypeName = \"DECIMAL(5,4)\")]\npublic decimal num { get; set; }" },
            { "Id": "time", "Name": "[Column(TypeName = \"TIME(0)\")]\npublic TimeSpan time { get; set; }" },
            { "Id": "smalldatetime", "Name": "[Column(TypeName = \"SMALLDATETIME\")]\npublic DateTime date { get; set; }" },
            { "Id": "nchar", "Name": "[Column(TypeName = \"NCHAR\")]\npublic string chr { get; set; }" },
            { "Id": "primaryNoIncrement", "Name": "[Key, DatabaseGenerated(DatabaseGeneratedOption.None)]\npublic int Id { get; set; }" }

         ]
    },
    "Keywords":[
        "from",
        "select",
        "where",
        "dynamic",
        "static",
        "readonly",
        "private",
        "public"
    ]

}
 

